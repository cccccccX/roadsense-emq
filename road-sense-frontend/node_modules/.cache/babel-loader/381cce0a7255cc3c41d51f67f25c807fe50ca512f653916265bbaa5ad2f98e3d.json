{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getfirstData } from \"@/api\";\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      showrow1: [{\n        line1: \"获取坑洼总数\"\n      }, {\n        line1: \"处理坑挖数\"\n      }, {\n        line1: \"用户有效反馈\"\n      }, {\n        line1: \"当前待处理\"\n      }, {\n        line1: \"当前待审核\"\n      }]\n    };\n  },\n  mounted() {\n    getfirstData().then(({\n      data\n    }) => {\n      console.log(data.firstdata);\n      const echarts2 = echarts.init(this.$refs.echarts2);\n      var echarts2option = {};\n      const {\n        orderData,\n        oneData\n      } = data.firstdata;\n      const xAxis = Object.keys(orderData.data[0]);\n      const xAxisData = {\n        data: xAxis\n      };\n      echarts2option.xAxis = xAxisData;\n      echarts2option.legend = xAxisData;\n      echarts2option.yAxis = {};\n      console.log(xAxis);\n      echarts2option.series = [];\n      echarts2option.xAxis = {\n        data: orderData.date\n      };\n      xAxis.forEach(key => {\n        echarts2option.series.push({\n          name: key,\n          data: orderData.data.map(item => item[key]),\n          type: \"line\"\n        });\n      });\n      echarts2option.title = {\n        text: \"道路健康指数\"\n      };\n      echarts2option.tooltip = {\n        trigger: \"axis\"\n      };\n      console.log(echarts2option);\n      echarts2.setOption(echarts2option);\n      const echarts1 = echarts.init(this.$refs.echarts1);\n      const eacharts1Option = {\n        title: {\n          text: \"各街道坑洼数量统计\"\n        },\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          // 类目轴\n          data: oneData.map(item => item.date),\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: [{\n          name: \"湖州街\",\n          data: oneData.map(item => item.street1),\n          type: \"bar\"\n        }, {\n          name: \"西文街\",\n          data: oneData.map(item => item.street2),\n          type: \"bar\"\n        }, {\n          name: \"凤起路\",\n          data: oneData.map(item => item.street3),\n          type: \"bar\"\n        }]\n      };\n      echarts1.setOption(eacharts1Option);\n      const echarts4 = echarts.init(this.$refs.echarts4);\n      const eacharts4Option = {\n        title: {\n          text: \"近日维护\"\n        },\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          // 类目轴\n          data: oneData.map(item => item.date),\n          axisLine: {\n            lineStyle: {\n              color: \"#c0392b\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#c0392b\"\n            }\n          }\n        }],\n        color: [\"#f39c12\", \"#f1c40f\", \"#8c6239\"],\n        series: [{\n          name: \"湖州街\",\n          data: oneData.map(item => item.street1),\n          type: \"bar\"\n        }, {\n          name: \"西文街\",\n          data: oneData.map(item => item.street2),\n          type: \"bar\"\n        }, {\n          name: \"凤起路\",\n          data: oneData.map(item => item.street3),\n          type: \"bar\"\n        }]\n      };\n      echarts4.setOption(eacharts4Option);\n    });\n  }\n};","map":{"version":3,"names":["getfirstData","echarts","data","showrow1","line1","mounted","then","console","log","firstdata","echarts2","init","$refs","echarts2option","orderData","oneData","xAxis","Object","keys","xAxisData","legend","yAxis","series","date","forEach","key","push","name","map","item","type","title","text","tooltip","trigger","setOption","echarts1","eacharts1Option","textStyle","color","grid","left","axisLine","lineStyle","axisLabel","interval","street1","street2","street3","echarts4","eacharts4Option"],"sources":["src/view/pages/First.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row>\r\n      <el-col :span=\"4.8\" v-for=\"item in showrow1\" style=\"padding-right: 10px\">\r\n        <el-card class=\"showrow1\">\r\n          <div slot=\"header\">\r\n            <span>{{ item.line1 + \":\" }}</span>\r\n          </div>\r\n          <div v-for=\"o in 1\" :key=\"o\">\r\n            {{ '列表内容 ' + o }}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row class=\"showrow2\">\r\n      <el-col :span=\"12\">\r\n        <el-card>\r\n          <div ref=\"echarts1\" style=\"height: 260px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card>\r\n          <div ref=\"echarts2\" style=\"height: 260px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    <el-row class=\"showrow3\">\r\n      <el-col :span=\"12\">\r\n        <el-card>\r\n          <!-- 第一列的内容 -->\r\n          ...\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card>\r\n          <div ref=\"echarts4\" style=\"height: 260px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped>\r\n.showrow1 {\r\n  font-size: 20px;\r\n  margin-bottom: 18px;\r\n  width: 280px;\r\n  span {\r\n    font-size: 15px;\r\n  }\r\n}\r\n\r\n.showrow2 {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .el-card{\r\n    height: 260px;\r\n    width: 97.5%;\r\n  }\r\n}\r\n\r\n.showrow3 {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .el-card{\r\n    height: 260px;\r\n    width: 97.5%;\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n<script>\r\nimport {getfirstData} from \"@/api\";\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  data(){\r\n    return {\r\n      showrow1:[\r\n        {\r\n          line1: \"获取坑洼总数\",\r\n        },\r\n        {\r\n          line1: \"处理坑挖数\",\r\n        },\r\n        {\r\n          line1: \"用户有效反馈\",\r\n        },\r\n        {\r\n          line1: \"当前待处理\",\r\n        },\r\n        {\r\n          line1: \"当前待审核\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    getfirstData().then(({data}) => {\r\n      console.log(data.firstdata);\r\n      const echarts2 = echarts.init(this.$refs.echarts2);\r\n      var echarts2option = {}\r\n      const {orderData,oneData} = data.firstdata\r\n      const xAxis = Object.keys(orderData.data[0]);\r\n      const xAxisData = {\r\n        data: xAxis,\r\n      }\r\n      echarts2option.xAxis = xAxisData;\r\n      echarts2option.legend = xAxisData;\r\n      echarts2option.yAxis = {};\r\n      console.log(xAxis);\r\n      echarts2option.series = [];\r\n      echarts2option.xAxis = { data: orderData.date };\r\n      xAxis.forEach((key) => {\r\n        echarts2option.series.push({\r\n          name: key,\r\n          data: orderData.data.map((item) => item[key]),\r\n          type: \"line\",\r\n        });\r\n      });\r\n      echarts2option.title = {\r\n        text: \"道路健康指数\"\r\n      }\r\n      echarts2option.tooltip = {\r\n        trigger: \"axis\",\r\n      };\r\n      console.log(echarts2option)\r\n      echarts2.setOption(echarts2option);\r\n\r\n      const echarts1 = echarts.init(this.$refs.echarts1);\r\n      const eacharts1Option = {\r\n        title: {\r\n          text: \"各街道坑洼数量统计\"\r\n        },\r\n        legend: {\r\n          // 图例文字颜色\r\n          textStyle: {\r\n            color: \"#333\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"20%\",\r\n        },\r\n        // 提示框\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n        },\r\n        xAxis: {\r\n          type: \"category\", // 类目轴\r\n          data: oneData.map((item) => item.date),\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#17b3a3\",\r\n            },\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n            color: \"#333\",\r\n          },\r\n        },\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"#17b3a3\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        color: [\"#2ec7c9\", \"#b6a2de\"],\r\n        series: [\r\n          {\r\n            name: \"湖州街\",\r\n            data: oneData.map((item) => item.street1),\r\n            type: \"bar\",\r\n          },\r\n          {\r\n            name: \"西文街\",\r\n            data: oneData.map((item) => item.street2),\r\n            type: \"bar\",\r\n          },\r\n          {\r\n            name: \"凤起路\",\r\n            data: oneData.map((item) => item.street3),\r\n            type: \"bar\",\r\n          },\r\n        ],\r\n      };\r\n      echarts1.setOption(eacharts1Option);\r\n      const echarts4 = echarts.init(this.$refs.echarts4);\r\n      const eacharts4Option = {\r\n        title: {\r\n          text: \"近日维护\"\r\n        },\r\n        legend: {\r\n          // 图例文字颜色\r\n          textStyle: {\r\n            color: \"#333\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"20%\",\r\n        },\r\n        // 提示框\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n        },\r\n        xAxis: {\r\n          type: \"category\", // 类目轴\r\n          data: oneData.map((item) => item.date),\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: \"#c0392b\",\r\n            },\r\n          },\r\n          axisLabel: {\r\n            interval: 0,\r\n            color: \"#333\",\r\n          },\r\n        },\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"#c0392b\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        color: [\"#f39c12\", \"#f1c40f\",\"#8c6239\"],\r\n        series: [\r\n          {\r\n            name: \"湖州街\",\r\n            data: oneData.map((item) => item.street1),\r\n            type: \"bar\",\r\n          },\r\n          {\r\n            name: \"西文街\",\r\n            data: oneData.map((item) => item.street2),\r\n            type: \"bar\",\r\n          },\r\n          {\r\n            name: \"凤起路\",\r\n            data: oneData.map((item) => item.street3),\r\n            type: \"bar\",\r\n          },\r\n        ],\r\n      };\r\n      echarts4.setOption(eacharts4Option);\r\n    })\r\n  }\r\n}\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}