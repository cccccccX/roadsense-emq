{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// mock数据模拟\nimport Mock from 'mockjs';\n\n// 图表数据\nlet List = [];\nexport default {\n  getStatisticalData: () => {\n    //Mock.Random.float 产生随机数100到8000之间 保留小数 最小0位 最大0位\n    for (let i = 0; i < 6; i++) {\n      List.push(Mock.mock({\n        湖州街: Mock.Random.float(100, 8000, 0, 0),\n        西文街: Mock.Random.float(100, 8000, 0, 0),\n        凤起路: Mock.Random.float(100, 8000, 0, 0)\n      }));\n    }\n    return {\n      code: 20000,\n      firstdata: {\n        // 饼图\n        videoData: [{\n          name: 'IIC',\n          value: 2999\n        }, {\n          name: 'UART',\n          value: 5999\n        }, {\n          name: 'SPI',\n          value: 1500\n        }, {\n          name: 'CAN',\n          value: 1999\n        }, {\n          name: 'MQTT',\n          value: 2200\n        }, {\n          name: '其他',\n          value: 4500\n        }],\n        // 柱状图\n        userData: [{\n          date: '一月',\n          street: 5,\n          active: 200\n        }, {\n          date: '二月',\n          new: 10,\n          active: 500\n        }, {\n          date: '三月',\n          new: 12,\n          active: 550\n        }, {\n          date: '四月',\n          new: 60,\n          active: 800\n        }, {\n          date: '五月',\n          new: 65,\n          active: 550\n        }, {\n          date: '六月',\n          new: 53,\n          active: 770\n        }],\n        // 折线图\n        orderData: {\n          date: ['1月', '2月', '3月', '4月', '5月', '6月'],\n          data: List\n        },\n        tableData: [{\n          name: '调度系统',\n          todayBuy: 500,\n          monthBuy: 3500,\n          totalBuy: 22000\n        }, {\n          name: '水质系统',\n          todayBuy: 300,\n          monthBuy: 2200,\n          totalBuy: 24000\n        }, {\n          name: '水温系统',\n          todayBuy: 800,\n          monthBuy: 4500,\n          totalBuy: 65000\n        }, {\n          name: '处理系统',\n          todayBuy: 1200,\n          monthBuy: 6500,\n          totalBuy: 45000\n        }, {\n          name: '智能监测系统',\n          todayBuy: 300,\n          monthBuy: 2000,\n          totalBuy: 34000\n        }, {\n          name: '可视化追溯系统',\n          todayBuy: 350,\n          monthBuy: 3000,\n          totalBuy: 22000\n        }]\n      }\n    };\n  }\n};","map":{"version":3,"names":["Mock","List","getStatisticalData","i","push","mock","湖州街","Random","float","西文街","凤起路","code","firstdata","videoData","name","value","userData","date","street","active","new","orderData","data","tableData","todayBuy","monthBuy","totalBuy"],"sources":["D:/IDEA project/RoadSense/road-sense/src/api/mockServeData/firstmock.js"],"sourcesContent":["// mock数据模拟\r\nimport Mock from 'mockjs';\r\n\r\n// 图表数据\r\nlet List = [];\r\nexport default {\r\n    getStatisticalData: () => {\r\n        //Mock.Random.float 产生随机数100到8000之间 保留小数 最小0位 最大0位\r\n        for (let i = 0; i < 6; i++) {\r\n            List.push(\r\n                Mock.mock({\r\n                    湖州街: Mock.Random.float(100, 8000, 0, 0),\r\n                    西文街: Mock.Random.float(100, 8000, 0, 0),\r\n                    凤起路: Mock.Random.float(100, 8000, 0, 0),\r\n                })\r\n            );\r\n        }\r\n        return {\r\n            code: 20000,\r\n            firstdata: {\r\n                // 饼图\r\n                videoData: [\r\n                    {\r\n                        name: 'IIC',\r\n                        value: 2999,\r\n                    },\r\n                    {\r\n                        name: 'UART',\r\n                        value: 5999,\r\n                    },\r\n                    {\r\n                        name: 'SPI',\r\n                        value: 1500,\r\n                    },\r\n                    {\r\n                        name: 'CAN',\r\n                        value: 1999,\r\n                    },\r\n                    {\r\n                        name: 'MQTT',\r\n                        value: 2200,\r\n                    },\r\n                    {\r\n                        name: '其他',\r\n                        value: 4500,\r\n                    },\r\n                ],\r\n                // 柱状图\r\n                userData: [\r\n                    {\r\n                        date: '一月',\r\n                        street: 5,\r\n                        active: 200,\r\n                    },\r\n                    {\r\n                        date: '二月',\r\n                        new: 10,\r\n                        active: 500,\r\n                    },\r\n                    {\r\n                        date: '三月',\r\n                        new: 12,\r\n                        active: 550,\r\n                    },\r\n                    {\r\n                        date: '四月',\r\n                        new: 60,\r\n                        active: 800,\r\n                    },\r\n                    {\r\n                        date: '五月',\r\n                        new: 65,\r\n                        active: 550,\r\n                    },\r\n                    {\r\n                        date: '六月',\r\n                        new: 53,\r\n                        active: 770,\r\n                    },\r\n                ],\r\n                // 折线图\r\n                orderData: {\r\n                    date: [\r\n                        '1月',\r\n                        '2月',\r\n                        '3月',\r\n                        '4月',\r\n                        '5月',\r\n                        '6月',\r\n                    ],\r\n                    data: List,\r\n                },\r\n                tableData: [\r\n                    {\r\n                        name: '调度系统',\r\n                        todayBuy: 500,\r\n                        monthBuy: 3500,\r\n                        totalBuy: 22000,\r\n                    },\r\n                    {\r\n                        name: '水质系统',\r\n                        todayBuy: 300,\r\n                        monthBuy: 2200,\r\n                        totalBuy: 24000,\r\n                    },\r\n                    {\r\n                        name: '水温系统',\r\n                        todayBuy: 800,\r\n                        monthBuy: 4500,\r\n                        totalBuy: 65000,\r\n                    },\r\n                    {\r\n                        name: '处理系统',\r\n                        todayBuy: 1200,\r\n                        monthBuy: 6500,\r\n                        totalBuy: 45000,\r\n                    },\r\n                    {\r\n                        name: '智能监测系统',\r\n                        todayBuy: 300,\r\n                        monthBuy: 2000,\r\n                        totalBuy: 34000,\r\n                    },\r\n                    {\r\n                        name: '可视化追溯系统',\r\n                        todayBuy: 350,\r\n                        monthBuy: 3000,\r\n                        totalBuy: 22000,\r\n                    },\r\n                ],\r\n            },\r\n        };\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}